@use "sass:map";
@use "@angular/material" as mat;

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, "primary");
  $primary-color: mat.get-color-from-palette($primary-palette, 500);
}

@mixin typography($theme) {
  $typography-config: mat.get-typography-config($theme);
  $font-family: mat.font-family($typography-config);
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);

  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);

  @if $typography-config != null {
    @include typography($theme);
  }

  .mat-button-base {
    &.mat-button,
    &.mat-raised-button,
    &.mat-stroked-button,
    &.mat-flat-button {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      text-align: center;
      font-family: var(--ff-title-font);
      font-weight: var(--fw-medium);
      min-height: 4.4rem;
      padding: 0 2.5rem;
    }

    &.mat-flat-button {
      &.mat-primary {
        --color: var(--color-light-blue);
        background-color: var(--color);
        border-color: var(--color);
        color: var(--color-white);

        &:hover {
          --color: var(--color-hover-button);
        }

        &:active {
          --color: var(--color-press-button);
        }

        &:disabled {
          --color: var(--color-wireframe-4);
        }
      }
    }

    &.mat-stroked-button {
      &.mat-primary {
        --color: var(--color-light-blue);
        border-color: var(--color);
        color: var(--color);

        &:hover {
          --color: var(--color-hover-button);
        }

        &:active {
          --color: var(--color-press-button);
        }

        &:disabled {
          --color: var(--color-wireframe-4);
        }
      }
    }
  }
}
